/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../common";
import type {
  VestingWallet,
  VestingWalletInterface,
} from "../../../../../contract/vesting/finance/VestingWalletNode.sol/VestingWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "end",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405260405161145a38038061145a83398181016040528101906100259190610232565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100985760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161008f9190610281565b60405180910390fd5b6100a7816100cb60201b60201c565b508067ffffffffffffffff1660808167ffffffffffffffff1681525050505061029c565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bf82610194565b9050919050565b6101cf816101b4565b81146101da57600080fd5b50565b6000815190506101ec816101c6565b92915050565b600067ffffffffffffffff82169050919050565b61020f816101f2565b811461021a57600080fd5b50565b60008151905061022c81610206565b92915050565b600080604083850312156102495761024861018f565b5b6000610257858286016101dd565b92505060206102688582860161021d565b9150509250929050565b61027b816101b4565b82525050565b60006020820190506102966000830184610272565b92915050565b6080516111956102c5600039600081816105d3015281816106e0015261072701526111956000f3fe6080604052600436106100c65760003560e01c8063961325211161007f578063be9a655511610059578063be9a655514610273578063efbe1c1c1461029e578063f2fde38b146102c9578063fbccedae146102f2576100cd565b806396132521146101ce5780639852595c146101f9578063a3f8eace14610236576100cd565b80630a17b06b146100d2578063191655871461010f578063715018a614610138578063810ec23b1461014f57806386d1a69f1461018c5780638da5cb5b146101a3576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100f960048036038101906100f49190610cfb565b61031d565b6040516101069190610d41565b60405180910390f35b34801561011b57600080fd5b5061013660048036038101906101319190610dba565b610342565b005b34801561014457600080fd5b5061014d610409565b005b34801561015b57600080fd5b5061017660048036038101906101719190610de7565b61041d565b6040516101839190610d41565b60405180910390f35b34801561019857600080fd5b506101a16104bd565b005b3480156101af57600080fd5b506101b861052d565b6040516101c59190610e36565b60405180910390f35b3480156101da57600080fd5b506101e3610556565b6040516101f09190610d41565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190610dba565b610560565b60405161022d9190610d41565b60405180910390f35b34801561024257600080fd5b5061025d60048036038101906102589190610dba565b6105a9565b60405161026a9190610d41565b60405180910390f35b34801561027f57600080fd5b506102886105cf565b6040516102959190610d41565b60405180910390f35b3480156102aa57600080fd5b506102b3610601565b6040516102c09190610d41565b60405180910390f35b3480156102d557600080fd5b506102f060048036038101906102eb9190610dba565b610634565b005b3480156102fe57600080fd5b506103076106ba565b6040516103149190610d41565b60405180910390f35b600061033b61032a610556565b476103359190610e80565b836106dc565b9050919050565b600061034d826105a9565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461039e9190610e80565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516103eb9190610d41565b60405180910390a2610405826103ff61052d565b83610933565b5050565b6104116109b2565b61041b6000610a39565b565b60006104b561042b84610560565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104649190610e36565b602060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a59190610ee0565b6104af9190610e80565b836106dc565b905092915050565b60006104c76106ba565b905080600160008282546104db9190610e80565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105119190610d41565b60405180910390a161052a61052461052d565b82610afd565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105b482610560565b6105be834261041d565b6105c89190610f0d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000607862278d006106139190610f41565b67ffffffffffffffff166106256105cf565b61062f9190610e80565b905090565b61063c6109b2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ae5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106a59190610e36565b60405180910390fd5b6106b781610a39565b50565b60006106c4610556565b6106cd4261031d565b6106d79190610f0d565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168267ffffffffffffffff161015610723576000905061092d565b60007f0000000000000000000000000000000000000000000000000000000000000000836107519190610f7e565b9050600062278d00826107649190610fe9565b9050607867ffffffffffffffff168167ffffffffffffffff161061079357600160786107909190610f7e565b90505b60006001826107a2919061101a565b90506000806040518061014001604052806a0a0d7366e3d8ed870f000081526020016a090c1b0efdd22e34564c0081526020016a08247ec093a209996dee0081526020016a07540bad34104faef1ee0081526020016a069870e891405b8f1bee0081526020016a05ef98d131eb997274ee0081526020016a0557a323235a204fc2b40081526020016a04cedf9fdb075c9585ee0081526020016a0453c9432f88250b22b40081526020016a03e7c2f5d941c546120000815250905060005b600a811015610923576000600c826108789190611056565b90508067ffffffffffffffff168567ffffffffffffffff161161089b5750610923565b6000600c826108aa919061101a565b67ffffffffffffffff168667ffffffffffffffff16116108d55781866108d09190610f7e565b6108d8565b600c5b90508067ffffffffffffffff168484600a81106108f8576108f7611098565b5b60200201516109079190611056565b856109129190610e80565b945050508080600101915050610860565b5081955050505050505b92915050565b6109ad838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016109669291906110c7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bc7565b505050565b6109ba610c69565b73ffffffffffffffffffffffffffffffffffffffff166109d861052d565b73ffffffffffffffffffffffffffffffffffffffff1614610a37576109fb610c69565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a2e9190610e36565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80471015610b445747816040517fcf479181000000000000000000000000000000000000000000000000000000008152600401610b3b9291906110f0565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610b6b9061114a565b60006040518083038185875af1925050503d8060008114610ba8576040519150601f19603f3d011682016040523d82523d6000602084013e610bad565b606091505b509150915081610bc157610bc081610c71565b5b50505050565b600080602060008451602086016000885af180610bea576040513d6000823e3d81fd5b3d925060005191505060008214610c05576001811415610c21565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c6357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610c5a9190610e36565b60405180910390fd5b50505050565b600033905090565b600081511115610c845780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cd881610cbb565b8114610ce357600080fd5b50565b600081359050610cf581610ccf565b92915050565b600060208284031215610d1157610d10610cb6565b5b6000610d1f84828501610ce6565b91505092915050565b6000819050919050565b610d3b81610d28565b82525050565b6000602082019050610d566000830184610d32565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8782610d5c565b9050919050565b610d9781610d7c565b8114610da257600080fd5b50565b600081359050610db481610d8e565b92915050565b600060208284031215610dd057610dcf610cb6565b5b6000610dde84828501610da5565b91505092915050565b60008060408385031215610dfe57610dfd610cb6565b5b6000610e0c85828601610da5565b9250506020610e1d85828601610ce6565b9150509250929050565b610e3081610d7c565b82525050565b6000602082019050610e4b6000830184610e27565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e8b82610d28565b9150610e9683610d28565b9250828201905080821115610eae57610ead610e51565b5b92915050565b610ebd81610d28565b8114610ec857600080fd5b50565b600081519050610eda81610eb4565b92915050565b600060208284031215610ef657610ef5610cb6565b5b6000610f0484828501610ecb565b91505092915050565b6000610f1882610d28565b9150610f2383610d28565b9250828203905081811115610f3b57610f3a610e51565b5b92915050565b6000610f4c82610cbb565b9150610f5783610cbb565b9250828202610f6581610cbb565b9150808214610f7757610f76610e51565b5b5092915050565b6000610f8982610cbb565b9150610f9483610cbb565b9250828203905067ffffffffffffffff811115610fb457610fb3610e51565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff482610cbb565b9150610fff83610cbb565b92508261100f5761100e610fba565b5b828204905092915050565b600061102582610cbb565b915061103083610cbb565b9250828201905067ffffffffffffffff8111156110505761104f610e51565b5b92915050565b600061106182610d28565b915061106c83610d28565b925082820261107a81610d28565b9150828204841483151761109157611090610e51565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820190506110dc6000830185610e27565b6110e96020830184610d32565b9392505050565b60006040820190506111056000830185610d32565b6111126020830184610d32565b9392505050565b600081905092915050565b50565b6000611134600083611119565b915061113f82611124565b600082019050919050565b600061115582611127565b915081905091905056fea26469706673582212205e914bf092ee0f651106e9acc471915bfd202dcd339ade101941ab1b5b2139c664736f6c634300081c0033";

type VestingWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestingWallet__factory extends ContractFactory {
  constructor(...args: VestingWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    beneficiary: AddressLike,
    startTimestamp: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      beneficiary,
      startTimestamp,
      overrides || {}
    );
  }
  override deploy(
    beneficiary: AddressLike,
    startTimestamp: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      beneficiary,
      startTimestamp,
      overrides || {}
    ) as Promise<
      VestingWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VestingWallet__factory {
    return super.connect(runner) as VestingWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingWalletInterface {
    return new Interface(_abi) as VestingWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VestingWallet {
    return new Contract(address, _abi, runner) as unknown as VestingWallet;
  }
}
