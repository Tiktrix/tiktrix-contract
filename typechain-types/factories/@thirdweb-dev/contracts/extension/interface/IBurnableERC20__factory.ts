/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBurnableERC20,
  IBurnableERC20Interface,
} from "../../../../../@thirdweb-dev/contracts/extension/interface/IBurnableERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBurnableERC20__factory {
  static readonly abi = _abi;
  static createInterface(): IBurnableERC20Interface {
    return new Interface(_abi) as IBurnableERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBurnableERC20 {
    return new Contract(address, _abi, runner) as unknown as IBurnableERC20;
  }
}
