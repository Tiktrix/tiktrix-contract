/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractMetadata__factory>;
    getContractFactory(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissions__factory>;
    getContractFactory(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionsEnumerable__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "VestingWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWallet__factory>;
    getContractFactory(
      name: "VestingWalletAdvisors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletAdvisors__factory>;
    getContractFactory(
      name: "VestingWalletCliff",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletCliff__factory>;
    getContractFactory(
      name: "VestingWalletCommunity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletCommunity__factory>;
    getContractFactory(
      name: "VestingWalletMarketing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletMarketing__factory>;
    getContractFactory(
      name: "VestingWalletNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletNode__factory>;
    getContractFactory(
      name: "VestingWalletReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestingWalletReferral__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;

    getContractAt(
      name: "ContractMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "IContractMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractMetadata>;
    getContractAt(
      name: "IPermissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissions>;
    getContractAt(
      name: "IPermissionsEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionsEnumerable>;
    getContractAt(
      name: "Permissions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "VestingWallet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWallet>;
    getContractAt(
      name: "VestingWalletAdvisors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletAdvisors>;
    getContractAt(
      name: "VestingWalletCliff",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletCliff>;
    getContractAt(
      name: "VestingWalletCommunity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletCommunity>;
    getContractAt(
      name: "VestingWalletMarketing",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletMarketing>;
    getContractAt(
      name: "VestingWalletNode",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletNode>;
    getContractAt(
      name: "VestingWalletReferral",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VestingWalletReferral>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;

    deployContract(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractMetadata>;
    deployContract(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissions>;
    deployContract(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissionsEnumerable>;
    deployContract(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "VestingWallet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWallet>;
    deployContract(
      name: "VestingWalletAdvisors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletAdvisors>;
    deployContract(
      name: "VestingWalletCliff",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletCliff>;
    deployContract(
      name: "VestingWalletCommunity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletCommunity>;
    deployContract(
      name: "VestingWalletMarketing",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletMarketing>;
    deployContract(
      name: "VestingWalletNode",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletNode>;
    deployContract(
      name: "VestingWalletReferral",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletReferral>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;

    deployContract(
      name: "ContractMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractMetadata>;
    deployContract(
      name: "IContractMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IContractMetadata>;
    deployContract(
      name: "IPermissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissions>;
    deployContract(
      name: "IPermissionsEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermissionsEnumerable>;
    deployContract(
      name: "Permissions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permissions>;
    deployContract(
      name: "PermissionsEnumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermissionsEnumerable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "VestingWallet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWallet>;
    deployContract(
      name: "VestingWalletAdvisors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletAdvisors>;
    deployContract(
      name: "VestingWalletCliff",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletCliff>;
    deployContract(
      name: "VestingWalletCommunity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletCommunity>;
    deployContract(
      name: "VestingWalletMarketing",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletMarketing>;
    deployContract(
      name: "VestingWalletNode",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletNode>;
    deployContract(
      name: "VestingWalletReferral",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VestingWalletReferral>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
